---
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  A CodePipeline to deploy a sinistral (AWS) serverless application.

Parameters:

  ApplicationName:
    Type: String
    Default: ssapp

  GitHubBranch:
    Type: String
    Default: master

  GitHubPersonalAccessTokenSecretName:
    Type: String
    Default: github-personal-access-token

  GitHubRepo:
    Type: String
    Default: ssapp

  GitHubRepoUrl:
    Type: String

  GitHubUser:
    Type: String

Resources:

  BuildArtifactS3Bucket:
    Type: AWS::S3::Bucket

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /service-role/
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-cloudformation-service-role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                Effect: Allow
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ApplicationName}-test/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ApplicationName}-prod/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
              - Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:GetRole
                Effect: Allow
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - Action:
                  - iam:PassRole
                Effect: Allow
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${ApplicationName}-*
              - Action:
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:UpdateFunctionCode
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
                Effect: Allow
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ApplicationName}-test*
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ApplicationName}-prod*
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  Fn::Sub:
                    - ${Arn}/cloudformation/*
                    - Arn: !GetAtt [BuildArtifactS3Bucket, Arn]

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /service-role/
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-codebuild-service-role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Action:
                  - s3:ListBucket
                Effect: Allow
                Resource: !GetAtt [BuildArtifactS3Bucket, Arn]
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - Fn::Sub:
                      - ${Arn}/*
                      - Arn: !GetAtt [BuildArtifactS3Bucket, Arn]
              - Action:
                  - cloudformation:ValidateTemplate
                Effect: Allow
                Resource:
                  - "*"
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:us-east-1:${AWS::AccountId}:parameter/3rd-party-auth/codecov.io/repo-upload-token-*

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /service-role/
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-codepipeline-service-role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - s3:ListBucket
                Effect: Allow
                Resource: !GetAtt [BuildArtifactS3Bucket, Arn]
              - Action:
                  - s3:DeleteObject
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - Fn::Sub:
                      - ${Arn}/*
                      - Arn: !GetAtt [BuildArtifactS3Bucket, Arn]
              - Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Effect: Allow
                Resource:
                  - Fn::GetAtt:
                      - CodeBuildProject
                      - Arn
                  - Fn::GetAtt:
                      - CloudFormationPackageCodeBuildProject
                      - Arn
              - Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:Describe*
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:List*
                  - cloudformation:UpdateStack
                Effect: Allow
                Resource:
                  - "*"
              - Action: iam:PassRole
                Effect: Allow
                Resource: !GetAtt [CloudFormationRole, Arn]

  PullRequestCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: >-
        CodeBuild project to build GitHub Pull Requests.
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: false
      Cache:
        Location: !Sub ${BuildArtifactS3Bucket}/codebuild/cache
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: GOAL
            Value: test
      ServiceRole: !GetAtt [CodeBuildRole, Arn]
      Source:
        Auth:
          Type: OAUTH
          Resource: !Sub '{{resolve:secretsmanager:${GitHubPersonalAccessTokenSecretName}::token::}}'
        BuildSpec: buildspec.yaml
        Location: !Ref GitHubRepoUrl
        ReportBuildStatus: true
        Type: GITHUB
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-cb-pr
      TimeoutInMinutes: 15
      Triggers:
        Webhook: true
        FilterGroups:
          - - Pattern: PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED
              Type: EVENT
            - ExcludeMatchedPattern: false
              Pattern: !Sub ^refs/heads/${GitHubBranch}$
              Type: BASE_REF

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: >-
        CodeBuild project to build the sinistral (AWS) serverless application.
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Location: !Sub ${BuildArtifactS3Bucket}/codebuild/cache
        Type: S3
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        EnvironmentVariables:
          - Name: GOAL
            Value: zip
      ServiceRole: !GetAtt [CodeBuildRole, Arn]
      Source:
        BuildSpec: buildspec.yaml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-cp
      TimeoutInMinutes: 15

  CloudFormationPackageCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: >-
        CodeBuild project to package the sinistral (AWS) serverless
        application.
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Location: !Sub ${BuildArtifactS3Bucket}/codebuild/cache
        Type: S3
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        EnvironmentVariables:
          - Name: APPLICATION_NAME
            Value: !Ref ApplicationName
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: TEMPLATE_BUCKET
            Value: !Ref BuildArtifactS3Bucket
          - Name: TEMPLATE_PREFIX
            Value: cloudformation
      ServiceRole: !GetAtt [CodeBuildRole, Arn]
      Source:
        BuildSpec: cloudformation-buildspec.yaml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-package
      TimeoutInMinutes: 5

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactS3Bucket
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubPersonalAccessTokenSecretName}::token::}}'
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
              OutputArtifacts:
                - Name: repo
        - Name: Build
          Actions:
            - Name: Boot
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: repo
              OutputArtifacts:
                - Name: application_build_artifact
              RunOrder: 1
            - Name: Package
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CloudFormationPackageCodeBuildProject
                PrimarySource: repo
              InputArtifacts:
                - Name: repo
                - Name: application_build_artifact
              OutputArtifacts:
                - Name: packaged-template
              RunOrder: 2
        - Name: DeployTest
          Actions:
            - Name: CreateCFChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: codepipeline-deploy
                RoleArn:
                  Fn::GetAtt: [CloudFormationRole, Arn]
                StackName: ssapp-test
                TemplateConfiguration: packaged-template::config/config-test.json
                TemplatePath: !Sub packaged-template::template/${ApplicationName}.yaml
              InputArtifacts:
                - Name: packaged-template
              RunOrder: 1
            - Name: ExecuteCFChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: codepipeline-deploy
                RoleArn:
                  Fn::GetAtt: [CloudFormationRole, Arn]
                StackName: !Sub ${ApplicationName}-test
              RunOrder: 2
        - Name: Approval
          Actions:
            - Name: Manual
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              InputArtifacts: []
              OutputArtifacts: []
        - Name: DeployProd
          Actions:
            - Name: CreateCFChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: codepipeline-deploy
                RoleArn:
                  Fn::GetAtt: [CloudFormationRole, Arn]
                StackName: !Sub ${ApplicationName}-prod
                TemplateConfiguration: packaged-template::config/config-prod.json
                TemplatePath: !Sub packaged-template::template/${ApplicationName}.yaml
              InputArtifacts:
                - Name: packaged-template
              RunOrder: 1
            - Name: ExecuteCFChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: codepipeline-deploy
                RoleArn:
                  Fn::GetAtt: [CloudFormationRole, Arn]
                StackName: !Sub ${ApplicationName}-prod
              RunOrder: 2
